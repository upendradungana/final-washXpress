generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  phone         String?
  vehicles      Vehicle[]
  bookings      Booking[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Vehicle {
  id      String      @id @default(auto()) @map("_id") @db.ObjectId
  make    String
  model   String
  year    Int
  license String
  type    VehicleType
  owner   User        @relation(fields: [ownerId], references: [id])
  ownerId String      @db.ObjectId

  bookings Booking[] @relation("VehicleBookings")
}

model Booking {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  serviceType     ServiceType
  vehicle         Vehicle       @relation("VehicleBookings", fields: [vehicleId], references: [id])
  vehicleId       String        @db.ObjectId
  user            User          @relation(fields: [userId], references: [id])
  userId          String        @db.ObjectId
  date            DateTime
  timeSlot        String
  status          BookingStatus @default(PENDING)
  specialRequests String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Contact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  PROVIDER
  ADMIN
}

enum VehicleType {
  CAR
  SUV_TRUCK
  MOTORCYCLE
  BICYCLE
  OTHER
}

enum ServiceType {
  BASIC_WASH
  PREMIUM_WASH
  FULL_DETAILING
  OTHER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}

